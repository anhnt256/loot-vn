generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Rank {
  id           Int      @id @default(autoincrement())
  name         String
  fromValue    Float
  toValue      Float
  discount     Float?
  foodVoucher  Int?
  drinkVoucher Int?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Game {
  id            Int      @id @default(autoincrement())
  name          String
  startDate     DateTime
  endDate       DateTime
  starsPerRound Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model CheckInResult {
  id        Int      @id @default(autoincrement())
  userId    Int
  createdAt DateTime @default(now())
  branch    String?  @default("GO_VAP")
}

model CheckInItem {
  id        Int      @id @default(autoincrement())
  dayName   String
  stars     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CheckInPromotion {
  id            Int      @id @default(autoincrement())
  checkInItemId Int
  coefficient   Float
  startDate     DateTime
  endDate       DateTime
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Item {
  id         Int       @id @default(autoincrement())
  name       String
  rating     Float
  type       Item_type
  maxValue   Float
  maxPercent Float
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model GameItemMap {
  id        Int      @id @default(autoincrement())
  gameId    Int      @unique
  itemId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model GameResult {
  id        Int      @id @default(autoincrement())
  voucher   String   @default(uuid())
  userId    Int
  itemId    Int
  startDate DateTime @default(now())
  endDate   DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserMissionMap {
  id        Int      @id @default(autoincrement())
  userId    Int
  missionId Int
  branch    String
  isDone    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User     @relation(fields: [userId], references: [id])
  mission   Mission  @relation(fields: [missionId], references: [id])

  @@index([missionId])
  @@index([userId])
}

model User {
  id             Int              @id @default(autoincrement())
  userName       String?          @db.VarChar(45)
  userId         Int
  rankId         Int
  stars          Int
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  magicStone     Int              @default(0)
  branch         String
  UserRewardMap  UserRewardMap[]
  UserMissionMap UserMissionMap[]
}

model Mission {
  id             Int              @id @default(autoincrement())
  name           String
  description    String
  reward         Float
  startHours     Int
  endHours       Int
  createdAt      DateTime         @default(now())
  quantity       Int
  type           Mission_type
  UserMissionMap UserMissionMap[]
}

model UserRewardMap {
  id              Int            @id @default(autoincrement())
  userId          Int?
  rewardId        Int?
  promotionCodeId Int?
  duration        Int?
  createdAt       DateTime?      @default(now())
  updatedAt       DateTime?      @updatedAt
  isUsed          Boolean        @default(false)
  branch          String?        @default("GO_VAP")
  promotionCode   PromotionCode? @relation(fields: [promotionCodeId], references: [id])
  user            User?          @relation(fields: [userId], references: [id])
  reward          Reward?        @relation(fields: [rewardId], references: [id])

  @@index([promotionCodeId])
  @@index([userId])
  @@index([rewardId])
}

model Reward {
  id            Int             @id @default(autoincrement())
  name          String?         @db.VarChar(45)
  stars         Int?
  value         Int?
  startDate     DateTime?
  endDate       DateTime?
  createdAt     DateTime?       @default(now())
  updateAt      DateTime?       @updatedAt
  UserRewardMap UserRewardMap[]
}

model PromotionCode {
  id            Int             @id @default(autoincrement())
  name          String?         @db.VarChar(45)
  code          String?         @db.VarChar(45)
  value         Int?
  branch        String?         @db.VarChar(45)
  isUsed        Boolean?        @default(false)
  createdAt     DateTime?       @default(now())
  updatedAt     DateTime?       @updatedAt
  UserRewardMap UserRewardMap[]
}

enum Item_type {
  HOURS
  ORDER
  COMBO
}

enum Mission_type {
  HOURS
  ORDER
  COMBO
}

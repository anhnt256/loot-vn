const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function seedHandoverMaterials() {
  try {
    console.log('üå± Starting handover materials seed...');

    // Clear existing data
    await prisma.handoverMaterial.deleteMany({});
    await prisma.handoverReport.deleteMany({});
    await prisma.material.deleteMany({});

    console.log('üóëÔ∏è Cleared existing data');

    // Create materials for B√°o c√°o b·∫øp
    const kitchenMaterials = [
      { name: 'G·∫°o', reportType: 'BAO_CAO_BEP', isOnFood: true },
      { name: 'Th·ªãt heo', reportType: 'BAO_CAO_BEP', isOnFood: true },
      { name: 'Th·ªãt b√≤', reportType: 'BAO_CAO_BEP', isOnFood: true },
      { name: 'C√°', reportType: 'BAO_CAO_BEP', isOnFood: true },
      { name: 'Rau c·∫£i', reportType: 'BAO_CAO_BEP', isOnFood: true },
      { name: 'H√†nh l√°', reportType: 'BAO_CAO_BEP', isOnFood: true },
      { name: 'D·∫ßu ƒÉn', reportType: 'BAO_CAO_BEP', isOnFood: false },
      { name: 'N∆∞·ªõc m·∫Øm', reportType: 'BAO_CAO_BEP', isOnFood: false },
      { name: 'Mu·ªëi', reportType: 'BAO_CAO_BEP', isOnFood: false },
      { name: 'ƒê∆∞·ªùng', reportType: 'BAO_CAO_BEP', isOnFood: false },
    ];

    // Create materials for B√°o c√°o n∆∞·ªõc
    const drinkMaterials = [
      { name: 'Coca Cola', reportType: 'BAO_CAO_NUOC', isOnFood: false },
      { name: 'Pepsi', reportType: 'BAO_CAO_NUOC', isOnFood: false },
      { name: 'Sprite', reportType: 'BAO_CAO_NUOC', isOnFood: false },
      { name: 'Fanta', reportType: 'BAO_CAO_NUOC', isOnFood: false },
      { name: 'N∆∞·ªõc su·ªëi', reportType: 'BAO_CAO_NUOC', isOnFood: false },
      { name: 'Tr√† ƒë√°', reportType: 'BAO_CAO_NUOC', isOnFood: false },
      { name: 'C√† ph√™', reportType: 'BAO_CAO_NUOC', isOnFood: false },
      { name: 'S·ªØa t∆∞∆°i', reportType: 'BAO_CAO_NUOC', isOnFood: false },
    ];

    const allMaterials = [...kitchenMaterials, ...drinkMaterials];

    // Insert materials
    for (const material of allMaterials) {
      await prisma.material.create({
        data: material
      });
    }

    console.log(`‚úÖ Created ${allMaterials.length} materials`);

    // Create handover reports for different dates
    const today = new Date();
    const yesterday = new Date(today);
    yesterday.setDate(yesterday.getDate() - 1);
    const twoDaysAgo = new Date(today);
    twoDaysAgo.setDate(twoDaysAgo.getDate() - 2);

    const reportDates = [
      { date: today, label: 'Today' },
      { date: yesterday, label: 'Yesterday' },
      { date: twoDaysAgo, label: 'Two days ago' }
    ];

    for (const { date, label } of reportDates) {
      console.log(`üìÖ Creating reports for ${label} (${date.toISOString().split('T')[0]})`);

      // Create B√°o c√°o b·∫øp
      const kitchenReport = await prisma.handoverReport.create({
        data: {
          date: date,
          reportType: 'BAO_CAO_BEP',
          branch: 'GO_VAP',
          note: `B√°o c√°o b·∫øp ${label}`
        }
      });

      // Create B√°o c√°o n∆∞·ªõc
      const drinkReport = await prisma.handoverReport.create({
        data: {
          date: date,
          reportType: 'BAO_CAO_NUOC',
          branch: 'GO_VAP',
          note: `B√°o c√°o n∆∞·ªõc ${label}`
        }
      });

      // Create handover materials for kitchen report
      const kitchenHandoverMaterials = [
        // Case 1: Ca s√°ng kh√¥ng update, ca chi·ªÅu update th·ª±c t·∫ø
        {
          handoverReportId: kitchenReport.id,
          materialName: 'G·∫°o',
          materialType: 'NGUYEN_VAT_LIEU',
          // Ca s√°ng: kh√¥ng update (0)
          morningBeginning: 0,
          morningReceived: 0,
          morningIssued: 0,
          morningEnding: 0,
          // Ca chi·ªÅu: update th·ª±c t·∫ø
          afternoonBeginning: 50, // T·ªìn ƒë·∫ßu ca chi·ªÅu
          afternoonReceived: 20,  // Nh·∫≠p th√™m
          afternoonIssued: 15,    // Xu·∫•t
          afternoonEnding: 55,    // T·ªìn cu·ªëi = 50 + 20 - 15
          // Ca t·ªëi: ch∆∞a c√≥ d·ªØ li·ªáu
          eveningBeginning: 0,
          eveningReceived: 0,
          eveningIssued: 0,
          eveningEnding: 0,
        },
        // Case 2: Ca s√°ng b√°o c√°o sai - T·ªìn cu·ªëi 40, nh∆∞ng T·ªìn ƒë·∫ßu ca chi·ªÅu l√† 43
        {
          handoverReportId: kitchenReport.id,
          materialName: 'Th·ªãt heo',
          materialType: 'NGUYEN_VAT_LIEU',
          // Ca s√°ng: b√°o c√°o sai
          morningBeginning: 30,
          morningReceived: 15,
          morningIssued: 5,
          morningEnding: 40, // B√°o c√°o sai
          // Ca chi·ªÅu: th·ª±c t·∫ø t·ªìn ƒë·∫ßu l√† 43 (kh√¥ng kh·ªõp v·ªõi t·ªìn cu·ªëi ca s√°ng)
          afternoonBeginning: 43, // Kh√¥ng kh·ªõp v·ªõi morningEnding = 40
          afternoonReceived: 10,
          afternoonIssued: 8,
          afternoonEnding: 45,
          // Ca t·ªëi
          eveningBeginning: 0,
          eveningReceived: 0,
          eveningIssued: 0,
          eveningEnding: 0,
        },
        // Case 3: Ca s√°ng b√°o c√°o sai - T·ªìn cu·ªëi 40, nh∆∞ng T·ªìn ƒë·∫ßu ca chi·ªÅu l√† 35
        {
          handoverReportId: kitchenReport.id,
          materialName: 'Th·ªãt b√≤',
          materialType: 'NGUYEN_VAT_LIEU',
          // Ca s√°ng: b√°o c√°o sai
          morningBeginning: 25,
          morningReceived: 20,
          morningIssued: 5,
          morningEnding: 40, // B√°o c√°o sai
          // Ca chi·ªÅu: th·ª±c t·∫ø t·ªìn ƒë·∫ßu l√† 35 (√≠t h∆°n t·ªìn cu·ªëi ca s√°ng)
          afternoonBeginning: 35, // √çt h∆°n morningEnding = 40
          afternoonReceived: 12,
          afternoonIssued: 7,
          afternoonEnding: 40,
          // Ca t·ªëi
          eveningBeginning: 0,
          eveningReceived: 0,
          eveningIssued: 0,
          eveningEnding: 0,
        },
        // Normal case - all shifts have data
        {
          handoverReportId: kitchenReport.id,
          materialName: 'C√°',
          materialType: 'NGUYEN_VAT_LIEU',
          morningBeginning: 20,
          morningReceived: 10,
          morningIssued: 8,
          morningEnding: 22,
          afternoonBeginning: 22,
          afternoonReceived: 15,
          afternoonIssued: 12,
          afternoonEnding: 25,
          eveningBeginning: 25,
          eveningReceived: 5,
          eveningIssued: 10,
          eveningEnding: 20,
        },
        // Normal case - food item
        {
          handoverReportId: kitchenReport.id,
          materialName: 'Rau c·∫£i',
          materialType: 'NGUYEN_VAT_LIEU',
          morningBeginning: 5,
          morningReceived: 8,
          morningIssued: 6,
          morningEnding: 7,
          afternoonBeginning: 7,
          afternoonReceived: 5,
          afternoonIssued: 4,
          afternoonEnding: 8,
          eveningBeginning: 8,
          eveningReceived: 3,
          eveningIssued: 5,
          eveningEnding: 6,
        },
        // Non-food item
        {
          handoverReportId: kitchenReport.id,
          materialName: 'D·∫ßu ƒÉn',
          materialType: 'NGUYEN_VAT_LIEU',
          morningBeginning: 10,
          morningReceived: 5,
          morningIssued: 3,
          morningEnding: 12,
          afternoonBeginning: 12,
          afternoonReceived: 2,
          afternoonIssued: 4,
          afternoonEnding: 10,
          eveningBeginning: 10,
          eveningReceived: 1,
          eveningIssued: 2,
          eveningEnding: 9,
        }
      ];

      // Create handover materials for drink report
      const drinkHandoverMaterials = [
        // Case 1: Ca s√°ng kh√¥ng update
        {
          handoverReportId: drinkReport.id,
          materialName: 'Coca Cola',
          materialType: 'NUOC_UONG',
          morningBeginning: 0,
          morningReceived: 0,
          morningIssued: 0,
          morningEnding: 0,
          afternoonBeginning: 100,
          afternoonReceived: 50,
          afternoonIssued: 30,
          afternoonEnding: 120,
          eveningBeginning: 0,
          eveningReceived: 0,
          eveningIssued: 0,
          eveningEnding: 0,
        },
        // Case 2: B√°o c√°o sai
        {
          handoverReportId: drinkReport.id,
          materialName: 'Pepsi',
          materialType: 'NUOC_UONG',
          morningBeginning: 80,
          morningReceived: 20,
          morningIssued: 15,
          morningEnding: 85, // B√°o c√°o sai
          afternoonBeginning: 90, // Kh√¥ng kh·ªõp v·ªõi morningEnding
          afternoonReceived: 30,
          afternoonIssued: 25,
          afternoonEnding: 95,
          eveningBeginning: 0,
          eveningReceived: 0,
          eveningIssued: 0,
          eveningEnding: 0,
        },
        // Normal case
        {
          handoverReportId: drinkReport.id,
          materialName: 'N∆∞·ªõc su·ªëi',
          materialType: 'NUOC_UONG',
          morningBeginning: 50,
          morningReceived: 20,
          morningIssued: 15,
          afternoonBeginning: 55,
          afternoonReceived: 25,
          afternoonIssued: 20,
          eveningBeginning: 60,
          eveningReceived: 10,
          eveningIssued: 15,
          eveningEnding: 55,
        }
      ];

      // Insert all handover materials
      const allHandoverMaterials = [...kitchenHandoverMaterials, ...drinkHandoverMaterials];
      
      for (const material of allHandoverMaterials) {
        await prisma.handoverMaterial.create({
          data: material
        });
      }

      console.log(`‚úÖ Created ${allHandoverMaterials.length} handover materials for ${label}`);
    }

    console.log('üéâ Handover materials seed completed successfully!');
    
    // Print summary
    const materialCount = await prisma.material.count();
    const reportCount = await prisma.handoverReport.count();
    const handoverMaterialCount = await prisma.handoverMaterial.count();
    
    console.log('\nüìä Summary:');
    console.log(`- Materials: ${materialCount}`);
    console.log(`- Handover Reports: ${reportCount}`);
    console.log(`- Handover Materials: ${handoverMaterialCount}`);

  } catch (error) {
    console.error('‚ùå Error seeding handover materials:', error);
    throw error;
  } finally {
    await prisma.$disconnect();
  }
}

// Run the seed function
seedHandoverMaterials()
  .then(() => {
    console.log('‚úÖ Seed completed');
    process.exit(0);
  })
  .catch((error) => {
    console.error('‚ùå Seed failed:', error);
    process.exit(1);
  }); 